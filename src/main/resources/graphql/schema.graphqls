type Query {
    getAccountsPage(page: Page, filter: Filter): AccountsPage
    getAccount(hash: String!): Account

    getTransactions(page: Page): [Transaction]
    getTransaction(hash: String!): Transaction
}

type Mutation {
    addAccount(accountInput: AccountInput!): Account
    deleteAccount(hash: ID!, removeSub: Boolean!): Boolean

    addTransaction(transactionInput: TransactionInput!): Transaction
}



type Transaction {
    name: String
    note: String
    amount: Float
    date: String
    need: Boolean
    hash: String
    accountTo: Account
    accountFrom: Account
    transactionType: TransactionType
    category: Category
}

type Category {
    name: String
    color: String
    hash: String
    income: Boolean
    parentId: Int
}

input TransactionInput {
    name: String!
    amount: Float!
    date: String!
    need: Boolean!
    accountToHash: String
    accountFromHash: String
    transactionType: TransactionType!
    categoryHash: String
    currency: Currency!
}

input CategoryInput {
    name: String!
    color: String!
    income: Boolean!
    parentId: Int
}

input Page {
    number: Int!
    size: Int!
}

enum TransactionType {
    INCOME
    EXPENSE
    TRANSFER
}

enum Currency {
    PLN
    EUR
}

