input AccountFilter {
    stringFilters: [StringExpression]
    doubleFilters: [DoubleExpression]
    logicOperator: LogicOperator
    subFilters: [AccountFilter]
#    archived: Boolean
#    parentId: IntExpression
#    accountType: AccountTypeExpression
#    and: [AccountFilter!]
#    or: [AccountFilter!]
#    not: AccountFilter
}

enum LogicOperator {
    AND,
    OR
}

input DoubleExpression {
    field: String
    operator: NumberOperator
    value: Float
}

enum NumberOperator {
    EQ,
    GT,
    GTE,
    LT,
    LTE
}

input StringExpression {
    field: String
    operator: StringOperator
    value: String
}

enum StringOperator {
    EQUALS
    CONTAINS
}

input AccountTypeExpression {
    equals: AccountType
}

input IntExpression {
    eq: Int
    gt: Int
    gte: Int
    lt: Int
    lte: Int
}

input FloatExpression {
    eq: Float
    gt: Float
    gte: Float
    lt: Float
    lte: Float
}